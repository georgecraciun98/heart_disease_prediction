openapi: 3.0.0
info:
    title: Medical API
    description: This is just a simple API for developing medical API
    version: 0.1.0
servers:
    - url: http://127.0.0.1:8000
      description: Development server for medical application
paths:
    /api/auth/token/login/:
        post:
            summary: get api token
            description: This allow you to request an api token
            responses:
                '200':
                    description: A list of pets.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/pet'

    /cats:
        post:
            summary: Add Cat
            description: This allows you to add a single cat
            operationId: addCat
            requestBody:
        
                content:
                    'application/x-www-form-urlencoded':
                        schema:
                            type: object
                            properties:
                                name: 
                                    description: Updated name of the pet
                                    type: string
                                status:
                                    description: Updated status of the pet
                                    type: string
                            required:
                                - status
            responses:
                '200':
                    description: user to add to the system
                    content: 
                        'application/json':
                            schema:
                                $ref: '#/components/schemas/User'
                                examples:
                                    user:
                                        id: 1 
                                        name: Shadow 
                                        eyeColor: brown
        get:
            description: Returns all pets from the system that the user has access to
            parameters:
               - name: status
                 in: query
                 description: This is used to filter users
                 required: true
                 schema:
                    type: string
            responses:
                '200':
                    description: A list of pets.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/pet'
    /cats/{id}:
        put:
            description: We will update a cat 
            responses:
                '200':
                    description: A list of pets.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/pet'
components:
    schemas:
        Cats:
            type: array
            items:
                $ref: '#/components/schemas/Cats'
        User:
            type: object
            required:
                - id
                - name
                - eyeColor

            properties:
                id:
                    type: integer
                name:
                    type: string
                description:
                    type: string
                owner:
                    type: string
                breed:
                    type: string
                age:
                    type: integer
                eyeColor:
                    type: array
                weight:
                    type: integer